1. Creating A Macro

	1.1 Storage
	By default Macros are stored in macroList.txt and are loaded into the programs memory during initialisation, meaning that a restart will need to be performed 		to load any changes.
	
	You can easily change the name of the file to be loaded in settings.txt, allowing multiple separate macro lists to be kept handy i.e separate lists for 	different games/tasks

	1.2 Structure
	A macro is made up of a hotkey and a key sequence, separated by a ':' (colon). An example is provided below:

		RCtrl:print some text

	The above macro will perform the key sequence "print some text" when the right control key is pressed; this is the most basic form a macro can take.

	Key sequences can also perform special key inputs by encapsulating the name of the special key in "{}" (braces). An example is provided below:

		RCtrl:{Shift down} print some text {Shift up}

	The above macro will begin holding the shift key before typing the text "print some text" and then finally release the shift key.

	Key sequences can also contain delays, encapsulated in hash's between braces, "{##}". An example is provided below:

		RCtrl:{Shift down}{#500#}{Shift up}

	The above macro will hold the shift key down for 500*10ms, or 5 seconds. It could also be written as:

		RCtrl:{Shift down #500#}{Shift up}

	Depending on your preference/use case.

	1.2.1 Advanced Structure
	Macros can also be created using symbols to describe special keys, which allows the use of combinations for your hotkey. An example is provided below:

		>^q:print some text

	This macro will be triggered when the right (>) control key (^) is pressed along with the q key. A list of symbols can be found at the link provided at the end 	of this document

	Hotkeys can also be arbitrary names, that can then be included as part of another macros key sequence. An example is provided below:

		autoShoot:{LButton down #500#}{LButton up}
		RCtrl:{autoShoot}

	When you press right control, it will trigger the autoShoot macro, resulting in left click being held for 5 seconds.

	Special keys can be accompanied by a number, which will result in the key being pressed that many times in quick succession. An example is provided below:

		RCtrl:{Tab 4}

	The above macro when triggered will result in the tab key being pressed 4 times.

	
2. Settings

	There are several customisable settings which allow the user to change some behaviour of the program. They are limited at the moment, however new settings can 		be added if requested through the github repo.

	2.1 Max Recursion Depth
	This is a numeric value which limits the depth to which a macro can nest itself. The default is 5 and values over a certain amount (~140) will cause the script 	to exit when triggered.

	2.2 List Name
	This is a string that contains the name of the file that macros will be loaded from. The default is macroList.txt

3. Links

	https://www.autohotkey.com/docs/commands/Send.htm#keynames - Contains a list of special keys and their names

	https://www.autohotkey.com/docs/Hotkeys.htm#Symbols - Contains a list of symbols used to represent special keys
