Macro Maker by Braeden Wilson

This program allows the user to create an arbitrary amount of custom macros, using normal keys (a-z 0-9 etc) as well as special keys (Enter, space, Control etc).


Creating a Macro

Macros are stored in macroList.txt and are loaded into memory when the program starts, meaning the program will need to be restarted when you make changes to the file.

This is the structure of a macro:

	hotkey:macro sequence

Hotkey is the key that will trigger the macro. This can be any key on the keyboard; use https://www.autohotkey.com/docs/commands/Send.htm for a list of possible hotkeys.

You can place a custom tag here which can be called in another macro i.e

	customName:print some text
	RCtrl:{customName}

Pressing RCtrl will trigger result in the customName macro being executed

Macro Sequence is the actual key sequence of the macro. This can be any number, letter, special character or special key. Special keys are the only input that requires special formatting and should be encapsulated in braces (i.e {RCtrl}).

Extended logic for button names in sequences is allowed i.e 

	RCtrl:{Enter 4}

Will result in the enter key being pressed 4 times when the macro is triggered and

	RCtrl:{Enter down}

Will result in the enter key being held until a subsequent {Enter up} command is sent

Macros can be nested and even call themselves, however a macro is only allowed a recursion depth of 5, this is to prevent infinite recursion from crashing the script during execution.



Known issues

Due to the use of braces to encapsulate special keys, they cannot be used as part of a key sequence

